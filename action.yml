name: "Package Java Agnostic Serverless Functions"
description: "Package an Agnostic Serverless Function in Java to deploy it on a specific FaaS provider"
branding:
  icon: package
  color: red
inputs:
  faas-provider:
    description: "The provider to package the function for. Possible values are: aws, azure, gcloud."
    required: true
  function-name:
    description: "The name of the function to be packaged"
    required: true
  working-directory:
    description: "The root directory of the function"
    required: false
    default: "."
outputs:
  deployment-directory:
    description: "The directory containing the files to be deployed"
    value: ${{ steps.package-aws.outputs.deployment-directory || steps.package-gcloud.outputs.deployment-directory || steps.package-azure.outputs.deployment-directory }}
  deployment-file:
    description: "The zip (for gcloud and azure) or jar (for aws) file to be deployed"
    value: ${{ steps.package-aws.outputs.deployment-file || steps.package-gcloud.outputs.deployment-file || steps.package-azure.outputs.deployment-file }}
runs:
  using: "composite"
  steps:
    - name: Package AWS Lambda
      if: ${{ inputs.faas-provider == 'aws' }}
      id: package-aws
      uses: axel-op/package-java-aws-lambda@main
      with:
        working-directory: ${{ inputs.working-directory }}
      env:
        DEPLOYMENT_DIR: deployment
    - name: Package Google Cloud Function
      if: ${{ inputs.faas-provider == 'gcloud' }}
      id: package-gcloud
      uses: axel-op/package-java-google-cloud-function@main
      with:
        working-directory: ${{ inputs.working-directory }}
      env:
        DEPLOYMENT_DIR: deployment
    - name: Package Azure Function app
      if: ${{ inputs.faas-provider == 'azure' }}
      id: package-azure
      uses: axel-op/package-java-azure-function@main
      with:
        working-directory: ${{ inputs.working-directory }}
        function-name: ${{ inputs.function-name }}
      env:
        DEPLOYMENT_DIR: deployment
